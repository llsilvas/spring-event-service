spring:
  datasource:
    # MySQL em container docker-link
    url: jdbc:mysql://${DB_HOST:mysql}:3306/ticketdb?serverTimezone=UTC&useSSL=false
    username: ${DB_USER:root}
    password: ${DB_PASSWORD:admin}

  flyway:
    # migrações em container
    url: jdbc:mysql://${DB_HOST:mysql}:3306/ticketdb?serverTimezone=UTC&useSSL=false
    user: ${DB_USER:root}
    password: ${DB_PASSWORD:admin}

  jpa:
    hibernate:
      ddl-auto: validate   # valida schema, não altera
    show-sql: false

  security:
    oauth2:
      resourceserver:
        jwt:
          # Keycloak container
          issuer-uri: http://${KEYCLOAK_URL:keycloak}:8443/realms/event-management
          jwk-set-uri: http://${KEYCLOAK_URL:keycloak}:8443/realms/event-management/protocol/openid-connect/certs

  keycloak:
    admin:
      client-id: ${KEYCLOAK_CLIENT_ID:user-service-admin}
      client-secret: ${KEYCLOAK_CLIENT_SECRET:docker-secret}
      auth-server-url: http://${KEYCLOAK_URL:keycloak}:8443
      realm: ${KEYCLOAK_REALM:event-management}

  rabbitmq:
    # RabbitMQ em container
    host: ${RABBITMQ_HOST:rabbitmq}
    port: ${RABBITMQ_PORT:5672}
    connection-timeout: 5
  config:
    activate:
      on-profile: docker

loki:
  # Loki link docker
  url: ${LOKI_URL:http://loki:3100/loki/api/v1/push}
  jobName: ${LOKI_JOB_NAME:spring-event-service}